import Head from 'next/head'
import React from 'react'
import { Inter } from '@next/font/google'
import Sidebar from '../components/Sidebar'
import Landing from '../components/Landing'
import Post from '../components/Post'
import { useDispatch, useSelector } from 'react-redux'
import { check_auth_status } from '../actions/auth'
import { useEffect, useState } from 'react'
import { useRouter } from 'next/router'
import { ArrowLeftIcon } from '@heroicons/react/outline'
import axios from 'axios'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
    const router = useRouter();
    const dispatch = useDispatch();
    const isAuthenticated = useSelector(state => state.auth.isAuthenticated)
    const [tweet, setTweet] = useState()
    const [replies, setReplies] = useState([])
    const [tweet_id, setTweet_Id] = useState(null) 
    
    
    
    
    useEffect( () =>{
        
        if(router.isReady){
            // setTweet_Id(router.query['id'])
            console.log(router.query['id'])

            async function getTweet(){

                try {
                    console.log(1)
                    const res = await fetch(`http://localhost:8000/api/tweets/retrieveTweet/${router.query['id']}`, {
                        method: 'GET'
                    })
                    const data = await res.json()
                    setTweet(data)
                    
                    
                } catch (error) {
                    console.log(error)
                }

                
            }
            getTweet();
            
            
        }
    },[router.isReady])
    
    //async function getTweet(){
        //     try {
        //         console.log(id)
        //         const res = await axios.get(`http://localhost:8000/api/tweets/retrieveTweet/${id}`)
        //         console.log(id)
        //         setTweet(res.data)

                
        //     } catch (error) {
        //         // if(error.response)
        //         // {
        //         //     // The request was made and the server responded with a status code
        //         //     // that falls out of the range of 2xx
        //         //     console.log(error.response.data);
        //         //     console.log(error.response.status);
        //         // }
        //         // else{
        //         //     // Something happened in setting up the request that triggered an Error
        //         //     console.log('Error', error.message);
        //         // }
        //         console.log('Error', error.message)
             
        //     }
        //     return console.log(tweet)
    
        // }

        // getTweet();
  
  
  
  
  
  
  useEffect(()=>{
        if(dispatch && dispatch !== null && dispatch !== undefined ){
            dispatch(check_auth_status());//place the load process in this action
            //dispatch(request_refresh()); //this prolly woudnt be done in a real application, this would only be hit on very important pages, li
            //like maybe a checkout page 
            
        }
    },[dispatch])

   
    
  
  
  if(isAuthenticated === false){
    return (
      <>
        <Head>
        <title>Bird app</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <Landing/>
        </main>
      </>
    )
  }


  return (
    <>
      <Head>
        <title>{tweet?.tweet[0]?.username} on Twitter "{tweet?.tweet[0]?.text}"</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-black min-h-screen max-w-[1500px] flex mx-auto">

        {/* Sidebar */}
        <Sidebar/>
        <div className="flex-grow border-l border-r border-gray-700 max-w-2xl sm:ml-[73px] xl:ml-[370px]">
          <div className="flex items-center px-1.5 py-2 border-b border-gray-700 text-[#d9d9d9] font-semibold text-xl gap-x-4 sticky top-0 z-50 bg-black">
            <div
              className="hoverAnimation w-9 h-9 flex items-center justify-center xl:px-0"
              onClick={() => router.push("/")}
            >
              <ArrowLeftIcon className="h-5 text-white" />
            </div>
            Tweet
          </div>
          <Post 
          id={tweet?.tweet[0]?.tweet_id} 
          text={tweet?.tweet[0]?.text} 
          media={tweet?.tweet[0]?.media} 
          username={''}/>
        
      
        {/* Widgets */}

        {/* Modal */}
        </div>
      </main>
      
    </>
  )
}


// export async function getServerSideProps(context){
    
//     const id = context.id



//     return {
//         props : {
//             id
//         }
//     }
// }