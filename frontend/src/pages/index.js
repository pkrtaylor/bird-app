import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import Sidebar from '../components/Sidebar'
import Feed from '../components/Feed'
import Landing from '../components/Landing'
import Layout from '../hocs/Layout'
import { useDispatch, useSelector } from 'react-redux'
import { check_auth_status } from '../actions/auth'
import { useEffect, useState } from 'react'
import Modal from '../components/Modal'
import RightSidebar from '../components/RightSidebar'
import { get_user_profile } from '../actions/profile'
import { relationsList } from '../actions/relations'
import {
 
  BookmarkIcon,
  UserIcon,
  
} from "@heroicons/react/outline";
import Link from 'next/link'
import { XIcon } from "@heroicons/react/outline"
import SearchSlide from '../components/SearchSlide'


const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const dispatch = useDispatch();
  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)
  const username = useSelector(state=>state.auth.user?.username)
  const isModal = useSelector(state => state.tweets.isModal)
  const [toggleSideBar, setToggleSideBar] = useState(false)
  const [toggleSearchSlide, setToggleSearchSlide] = useState(false)
  const mainProfile = useSelector(state=>state.profile?.mainProfile[0])
  const followerCount = useSelector(state => state.relations?.mainRelationsList?.followers) 
  const followingCount = useSelector(state => state.relations?.mainRelationsList?.following) 
  console.log(mainProfile?.display_name)
  useEffect(() => {
    if (dispatch && dispatch !== null && dispatch !== undefined) {
      dispatch(check_auth_status());//place the load process in this action
      //dispatch(request_refresh()); //this prolly woudnt be done in a real application, this would only be hit on very important pages, li
      //like maybe a checkout page 

    }
  }, [dispatch])

  useEffect(()=>{
    if(isAuthenticated){
      dispatch(get_user_profile(username, true))
      dispatch(relationsList(username, true))
    }
  },[username])

  
  if (isAuthenticated === false) {
    return (
      <>
        <Head>
          <title>Bird app</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main>
          <Landing />
        </main>
      </>
    )
  }


  return (
    <>
      <Head>
        <title>Bird app</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" bg-black relative min-h-screen max-w-[1500px] flex mx-auto">
      
        
        {/* Sidebar */}
        <Sidebar />

        {/* Feed */}
        <Feed setToggleSideBar={setToggleSideBar} toggleSideBar={toggleSideBar} setToggleSearchSlide={setToggleSearchSlide} toggleSearchSlide={toggleSearchSlide} />
        
       
        {/* Widgets */}
        <RightSidebar/>
        
        {isModal && <Modal pfp={mainProfile?.pfp}/>}
      </main>

    </>
  )
}
